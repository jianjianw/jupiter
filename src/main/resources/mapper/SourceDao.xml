<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qiein.jupiter.web.dao.SourceDao">

    <resultMap id="baseMap" type="com.qiein.jupiter.web.entity.po.SourcePO">
        <id column="ID" jdbcType="INTEGER" property="id"/>
        <result column="SRCNAME" jdbcType="VARCHAR" property="srcName"/>
        <result column="SRCIMG" jdbcType="VARCHAR" property="srcImg"/>
        <result column="TYPEID" jdbcType="INTEGER" property="typeId"/>
        <result column="CHANNELID" jdbcType="INTEGER" property="channelId"/>
        <result column="CHANNELNAME" jdbcType="VARCHAR" property="channelName"/>
        <result column="BRANDID" jdbcType="INTEGER" property="brandId"/>
        <result column="BRANDNAME" jdbcType="VARCHAR" property="brandName"/>
        <result column="COMPANYID" jdbcType="INTEGER" property="companyId"/>
        <result column="PRIORITY" jdbcType="INTEGER" property="priority"/>
        <result column="ISFILTER" jdbcType="BOOLEAN" property="isFilter"/>
        <result column="ISSHOW" jdbcType="BOOLEAN" property="isShow"/>
        <result column="PUSHRULE" jdbcType="INTEGER" property="pushRule"/>
        <result column="LINKIDS" jdbcType="VARCHAR" property="linkIds"></result>
        <result column="NICKNAMES" jdbcType="VARCHAR" property="nickNames"></result>
    </resultMap>

    <sql id="baseColumn">
        ID, SRCNAME, TYPEID, CHANNELID, CHANNELNAME, SRCIMG, BRANDID, BRANDNAME, PRIORITY, ISSHOW, ISFILTER, COMPANYID, PUSHRULE
    </sql>

    <select id="getByIdAndCid" parameterType="Integer" resultMap="baseMap">
        SELECT
        <include refid="baseColumn"/>
        FROM
        hm_crm_source
        WHERE
        ID = #{id}
        AND COMPANYID =#{companyId}
    </select>

    <!--新增来源-->
    <insert id="insert" parameterType="com.qiein.jupiter.web.entity.po.SourcePO" useGeneratedKeys="true"
            keyProperty="id">
        INSERT INTO hm_crm_source
        (SRCNAME, SRCIMG, TYPEID, CHANNELID, CHANNELNAME, BRANDID,PUSHRULE, BRANDNAME, COMPANYID, ISFILTER, ISSHOW, PRIORITY)
            SELECT
                #{srcName},
                #{srcImg},
                #{typeId},
                #{channelId},
                #{channelName},
                #{brandId},
                #{pushRule},
                #{brandName},
                #{companyId},
                #{isFilter},
                #{isShow},
                (
                    SELECT IFNULL(MAX(PRIORITY), 0) + 1
                    FROM hm_crm_source
                    WHERE COMPANYID = #{companyId} AND CHANNELID = #{channelId})
    </insert>

    <!--渠道关闭时，同时关闭下属所有来源-->
    <update id="updateIsShowByChannelId" parameterType="Integer">
        UPDATE hm_crm_source
        SET ISSHOW = false
        WHERE CHANNELID = #{channelId} AND COMPANYID = #{companyId}
    </update>

    <!--渠道筛选关闭时，同时关闭下属所有来源-->
    <update id="updateIsFilterByChannelId" parameterType="map">
        UPDATE hm_crm_source
        SET ISFILTER = #{flag}
        WHERE CHANNELID = #{channelId} AND COMPANYID = #{companyId}
    </update>

    <update id="update" parameterType="com.qiein.jupiter.web.entity.po.SourcePO">
        UPDATE
        hm_crm_source
        <set>
            <if test="srcName != null and srcName != '' ">
                SRCNAME = #{srcName},
            </if>
            <if test="srcImg != null and srcImg != '' ">
                SRCIMG = #{srcImg},
            </if>
            <if test="typeId != null">
                TYPEID = #{typeId},
            </if>
            <if test="channelId != null">
                CHANNELID = #{channelId},
            </if>
            <if test="channelName != null and channelName != '' ">
                CHANNELNAME = #{channelName},
            </if>
            <if test="brandId != null">
                BRANDID = #{brandId},
            </if>
            <if test="brandName != null and brandName != '' ">
                BRANDNAME = #{brandName},
            </if>
            <if test="priority != null">
                PRIORITY = #{priority},
            </if>
            <if test="isFilter != null">
                ISFILTER = #{isFilter},
            </if>
            <if test="isShow != null">
                ISSHOW = #{isShow},
            </if>
            <if test="pushRule != null">
                PUSHRULE = #{pushRule}
            </if>
        </set>
        WHERE
        ID = #{id}
        AND COMPANYID = #{companyId}
    </update>

    <!--批量编辑-->
    <update id="datUpdate" parameterType="map">
        UPDATE
        hm_crm_source
        <set>
            <if test="sv.srcImg != null and sv.srcImg != '' ">
                SRCIMG = #{sv.srcImg},
            </if>
            <if test="sv.typeId != null">
                TYPEID = #{sv.typeId},
            </if>
            <if test="sv.channelId != null">
                CHANNELID = #{sv.channelId},
            </if>
            <if test="sv.channelName != null and sv.channelName != '' ">
                CHANNELNAME = #{sv.channelName},
            </if>
            <if test="sv.brandId != null">
                BRANDID = #{sv.brandId},
            </if>
            <if test="sv.brandName != null and sv.brandName != '' ">
                BRANDNAME = #{sv.brandName},
            </if>
            <if test="sv.priority != null">
                PRIORITY = #{sv.priority},
            </if>
            <if test="sv.isFilter != null">
                ISFILTER = #{sv.isFilter},
            </if>
            <if test="sv.isShow != null">
                ISSHOW = #{sv.isShow},
            </if>
            <if test="pushRule != null">
                PUSHRULE = #{sv.pushRule}
            </if>
        </set>
        WHERE
        COMPANYID = #{sv.companyId} AND ID IN
        <foreach collection="ids" item="id" index="index" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <!--修改向下拖拽排序时波及的来源的排序-->
    <update id="updateDownPriority" parameterType="Integer">
        UPDATE
            hm_crm_source
        SET
            PRIORITY = PRIORITY - 1
        WHERE
            COMPANYID = #{companyId} AND PRIORITY &gt; #{xPriority} AND PRIORITY &lt;= #{dPriority}
    </update>

    <!--修改向上拖拽排序时波及的来源的排序-->
    <update id="updateUpPriority" parameterType="Integer">
        UPDATE
            hm_crm_source
        SET
            PRIORITY = PRIORITY + 1
        WHERE
            COMPANYID = #{companyId} AND PRIORITY &gt;= #{xPriority} AND PRIORITY &lt; #{dPriority}
    </update>

    <!--修改指定来源排序-->
    <update id="updatePriority" parameterType="Integer">
        UPDATE
            hm_crm_source
        SET PRIORITY = #{priority}
        WHERE
            COMPANYID = #{companyId} AND ID = #{id}
    </update>

    <delete id="delete" parameterType="Integer">
        DELETE
        FROM
            hm_crm_source
        WHERE
            COMPANYID = #{companyId} AND ID = #{id}

    </delete>

    <delete id="datDelete" parameterType="map">
        DELETE
        FROM
        hm_crm_source
        WHERE
        COMPANYID = #{companyId} AND ID IN
        <foreach collection="ids" item="id" index="index" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <!--批量删除校验是否可删-->
    <select id="datDelCheck" parameterType="map" resultType="Integer">
        SELECT
        COUNT(1)
        FROM
        ${tabName}
        WHERE
        SOURCEID IN
        <foreach collection="ids" item="id" index="index" open="(" separator="," close=")">#{id}</foreach>
    </select>

    <!--同名校验-->
    <select id="checkSource" parameterType="map" resultType="Integer">
        SELECT COUNT(1)
        FROM
            hm_crm_source
        WHERE
            COMPANYID = #{companyId} AND SRCNAME = #{srcName} AND CHANNELID = #{channelId}
    </select>

    <!--根据来源编号和公司编号删除制定记录-->
    <delete id="deleteByIdAndCid" parameterType="Integer">
        DELETE
        FROM
            hm_crm_source
        WHERE
            COMPANYID = #{companyId} AND ID = #{id}
    </delete>

    <!--根据渠道编号获取来源列表-->
    <select id="getSourceListByChannelId" parameterType="Integer" resultMap="baseMap">
        SELECT
            a.ID,
            a.SRCNAME,
            a.SRCIMG,
            a.TYPEID,
            a.CHANNELID,
            a.CHANNELNAME,
            a.BRANDID,
            a.PUSHRULE,
            a.BRANDNAME,
            a.COMPANYID,
            a.PRIORITY,
            a.ISFILTER,
            a.ISSHOW,
            if(a.PUSHRULE = 12,b.LINKIDS,IF(a.PUSHRULE = 14,c.LINKIDS,null))as LINKIDS,
            if(a.PUSHRULE = 12,b.NICKNAMES,if(a.PUSHRULE = 14,c.NICKNAMES,null))as nicknames
        FROM
            hm_crm_source a
            left join (SELECT
                           a.channelId,
                           a.SOURCEID,
                           a.companyId,
                           GROUP_CONCAT(a.LINKID SEPARATOR ',')   as LINKIDS,
                           GROUP_CONCAT(a.nickname SEPARATOR ',') as NICKNAMES
                       FROM
                           (
                               SELECT
                                   a.channelId,
                                   b.SOURCEID,
                                   b.LINKID,
                                   b.COMPANYID,
                                   c.NICKNAME
                               FROM
                                   hm_crm_source a,
                                   hm_crm_source_staff b,
                                   hm_pub_staff c
                               WHERE
                                   a.id = b.SOURCEID and b.LINKID = c.ID
                               GROUP BY
                                   SOURCEID,
                                   LINKID
                           ) a
                       GROUP BY
                           SOURCEID) b
                on a.id = b.SOURCEID
            LEFT JOIN (
                          SELECT
                              a.channelId,
                              a.SOURCEID,
                              a.companyId,
                              GROUP_CONCAT(a.LINKID SEPARATOR ',')    AS LINKIDS,
                              GROUP_CONCAT(a.GROUPNAME SEPARATOR ',') AS NICKNAMES
                          FROM
                              (
                                  SELECT
                                      a.channelId,
                                      b.SOURCEID,
                                      b.LINKID,
                                      b.COMPANYID,
                                      c.GROUPNAME
                                  FROM
                                      hm_crm_source a,
                                      hm_crm_source_staff b,
                                      hm_pub_group c
                                  WHERE
                                      a.id = b.SOURCEID
                                      AND b.LINKID = c.GROUPID
                                  GROUP BY
                                      b.SOURCEID,
                                      b.LINKID
                              ) a
                          GROUP BY
                              SOURCEID
                      ) c
                ON a.COMPANYID = c.COMPANYID
                   AND a.ID = c.sourceid
        WHERE
            a.COMPANYID = #{companyId} AND a.CHANNELID = #{channelId}
        ORDER BY ISSHOW DESC, PRIORITY, TYPEID,  ID
    </select>

    <!--渠道名变更时下属所有来源的记录也要相应变更-->
    <update id="updateChannelName" parameterType="map">
        UPDATE
            hm_crm_source
        SET
            CHANNELNAME = #{channelName}
        WHERE
            COMPANYID = #{companyId} AND CHANNELID = #{channelId}
    </update>

    <!--根据来源ID获取显示可用的来源信息-->
    <select id="getShowSourceById" parameterType="Integer" resultMap="baseMap">
        SELECT
        <include refid="baseColumn"/>
        FROM
        hm_crm_source
        WHERE
        COMPANYID = #{companyId}
        AND ID = #{id}
        AND ISSHOW = 1
    </select>

    <!--获取员工上个月录入使用来源的次数排序-->
    <select id="getLastMonthSrcSort" parameterType="map" resultType="java.lang.Integer">
        SELECT
        src.ID
        FROM
        ${tableName} info
        LEFT JOIN hm_crm_source src ON src.COMPANYID = info.COMPANYID AND src.ID = info.SOURCEID
        WHERE
        info.ISDEL = 0
        AND info.COMPANYID = #{companyId}
        AND info.COLLECTORID = #{staffId}
        AND DATE_SUB( CURDATE( ), INTERVAL 30 DAY ) &lt;= FROM_UNIXTIME( info.CREATETIME )
        AND src.ISSHOW = 1
        AND src.TYPEID IN
        <foreach collection="typeList" item="typeId" index="index" open="(" close=")" separator=",">
            #{typeId}
        </foreach>
        GROUP BY
        src.ID
        ORDER BY COUNT( 1 ) DESC;
    </select>

    <!--获取公司所有的来源列表 包括停用的-->
    <select id="getAllSourceListByCid" resultMap="baseMap">
        SELECT
        <include refid="baseColumn"/>
        FROM
        hm_crm_source
        WHERE
        COMPANYID = #{companyId}
    </select>

    <!--根据名称获取来源-->
    <select id="getSourceBySrcname" resultMap="baseMap">
        select
        <include refid="baseColumn"/>
        from hm_crm_source
        where COMPANYID = #{companyId} and SRCNAME = #{srcName} and CHANNELID = #{channelId}
    </select>
    <!--根据名称获取来源-->
    <select id = "getSourceByNameAndType" resultMap="baseMap">
        select
        <include refid="baseColumn"/>
        from hm_crm_source
        where COMPANYID = #{companyId} and SRCNAME = #{srcName} and TYPEID = #{type}
    </select>
    <!--根据渠道id更改来源pushRule-->
    <update id="updatePushRuleByChannelId">
        update hm_crm_source
        set PUSHRULE = #{pushRule}
        where CHANNELID = #{channelId} and COMPANYID = #{companyId}
    </update>

    <!--根据来源名，类型获取渠道-->
    <select id="getSourceByType" parameterType="map" resultMap="baseMap">
        SELECT
        <include refid="baseColumn"/>
        FROM
        hm_crm_source
        WHERE COMPANYID = #{companyId}
        AND TYPEID = #{typeId}
        AND SRCNAME = #{srcName}
        AND ISSHOW = 1
    </select>

    <!--查询所属公司所有显示的转介绍渠道id字符串-->
    <select id="getAllZjsSourceIdStr" resultType="String">
        SELECT
        GROUP_CONCAT(ID)
        FROM
        hm_crm_source
        WHERE COMPANYID = #{companyId}
        AND ISSHOW = 1
        AND TYPEID IN (3,4,5)
    </select>

    <select id="findSourseByType" resultMap="baseMap">
        select SRCIMG,SRCNAME,ID FROM hm_crm_source where companyId=#{companyId} and typeid in (${typeId})
        <if test="sourceIds!=null and sourceIds!=''">
            and ID IN (${sourceIds})
        </if>
    </select>

    <select id="findSourseByType1" resultMap="baseMap">
        SELECT
        src.id ID,
        src.SRCNAME SRCNAME,
        src.SRCIMG SRCIMG
        FROM
        hm_crm_client_info info
        LEFT JOIN hm_crm_source src on src.id = info.sourceId and src.companyid=info.companyid
        left join hm_crm_client_detail detail on info.kzid=detail.kzid and info.companyid=detail.companyid
        WHERE
        info.CREATETIME BETWEEN #{startTime}
        AND #{endTime}
        AND detail.INVALIDLABEL IS NOT NULL
        AND src.SRCNAME is not null
        and info.COMPANYID=#{companyId}
        and src.typeid in (${typeId})
        <if test="sourceIds!=null and sourceIds!=''">
            and src.ID IN (${sourceIds})
        </if>
        GROUP BY src.srcname

    </select>
    <select id="findSourceByRole" resultMap="baseMap">

        SELECT
            src.SRCIMG,
            src.SRCNAME,
            src.ID
        FROM
            hm_pub_role_source role
        LEFT JOIN hm_crm_source src ON src.ID = role.SOURCEID
        AND src.COMPANYID = role.COMPANYID
        WHERE
            role.COMPANYID = #{companyId}
        AND role.ROLEID IN (
            SELECT
                staff.ROLEID
            FROM
                hm_pub_staff_role staff
            WHERE
                staff.staffid = #{staffId}
        )
        and src.ID is not null
        and src.ID in (${sourceIds})
    </select>

    <!--获取员工所有来源列表-->
    <select id="getStaffSourceList" resultMap="baseMap">
        SELECT
        al.*
        FROM
        (SELECT
        <include refid="baseColumn"/>
        FROM
        hm_crm_source src
        WHERE
        src.PUSHRULE = 13 AND src.ISSHOW = 1 AND COMPANYID = #{companyId}
        UNION ALL
        SELECT
        src.*
        FROM
        hm_crm_source src
        INNER JOIN
        hm_crm_source_staff ss ON src.ID = ss.SOURCEID AND ss.RELATYPE = 1 AND ss.COMPANYID = src.COMPANYID
        WHERE
        src.PUSHRULE = 12 AND src.ISSHOW = 1  AND src.COMPANYID = #{companyId} AND ss.LINKID = #{staffId}
        UNION ALL
        SELECT
        src.*
        FROM
        hm_crm_source src
        INNER JOIN
        hm_crm_source_staff ss ON src.ID = ss.SOURCEID AND ss.RELATYPE = 2 AND ss.COMPANYID = src.COMPANYID
        INNER JOIN
        hm_pub_group_staff gs ON gs.GROUPID = ss.LINKID AND gs.COMPANYID = ss.COMPANYID
        WHERE
        src.PUSHRULE = 14 AND src.ISSHOW = 1  AND src.COMPANYID = #{companyId} AND gs.STAFFID = #{staffId}) al
        ORDER BY TYPEID,PUSHRULE,PRIORITY
    </select>

    <!--根据批量渠道编号获取渠道名称列表-->
    <select id="getSourceNamesByIds" parameterType="map" resultType="String">
        SELECT
        GROUP_CONCAT(SRCNAME)
        FROM
        hm_crm_source
        WHERE
        COMPANYID = #{companyId} AND ID IN
        <foreach collection="ids" item="id" index="index" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>
</mapper>