<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qiein.jupiter.web.dao.StaffDao">
    <resultMap id="baseMap" type="com.qiein.jupiter.web.entity.po.StaffPO">
        <id column="ID" property="id" jdbcType="INTEGER"/>
        <result column="NICKNAME" property="nickName" jdbcType="VARCHAR"/>
        <result column="PHONE" property="phone" jdbcType="VARCHAR"/>
        <result column="USERNAME" property="userName" jdbcType="VARCHAR"/>
        <result column="PASSWORD" property="password" jdbcType="VARCHAR"/>
        <result column="COMPANYID" property="companyId" jdbcType="INTEGER"/>
        <result column="CORPID" property="corpId" jdbcType="VARCHAR"/>
        <result column="DINGUSERID" property="dingUserId" jdbcType="VARCHAR"/>
        <result column="HEADIMG" property="headImg" jdbcType="VARCHAR"/>
        <result column="TOKEN" property="token" jdbcType="VARCHAR"/>
        <result column="STATUSFLAG" property="statusFlag" jdbcType="BOOLEAN"/>
        <result column="ISLOCK" property="lockFlag" jdbcType="BOOLEAN"/>
        <result column="ISDEL" property="delFlag" jdbcType="BOOLEAN"/>
        <result column="TODAYNUM" property="todayNum" jdbcType="INTEGER"/>
        <result column="WEIGHT" property="weight" jdbcType="INTEGER"/>
        <result column="LIMITDAY" property="limitDay" jdbcType="INTEGER"/>
        <result column="LASTPUSHTIME" property="lastPushTime" jdbcType="INTEGER"/>
        <result column="LIMITCHANNELIDS" property="limitChannelIds" jdbcType="VARCHAR"/>
        <result column="LIMITSHOPIDS" property="limitShopIds" jdbcType="VARCHAR"/>
        <result column="HEARTTIME" property="heartTime" jdbcType="INTEGER"/>
        <result column="WHITEFLAG" property="whiteFlag" jdbcType="BOOLEAN"/>

    </resultMap>

    <resultMap id="StaffVOMap" type="com.qiein.jupiter.web.entity.vo.StaffVO">
        <id column="ID" property="id" jdbcType="INTEGER"/>
        <result column="NICKNAME" property="nickName" jdbcType="VARCHAR"/>
        <result column="PHONE" property="phone" jdbcType="VARCHAR"/>
        <result column="USERNAME" property="userName" jdbcType="VARCHAR"/>
        <result column="PASSWORD" property="password" jdbcType="VARCHAR"/>
        <result column="COMPANYID" property="companyId" jdbcType="INTEGER"/>
        <result column="HEADIMG" property="headImg" jdbcType="VARCHAR"/>
        <result column="ISLOCK" property="lockFlag" jdbcType="BOOLEAN"/>
        <result column="ROLENAME" property="roleName" jdbcType="VARCHAR"/>
        <result column="ROLEID" property="roleId" jdbcType="VARCHAR"/>
        <result column="GROUPID" property="groupId" jdbcType="VARCHAR"/>
        <collection property="roleList" ofType="com.qiein.jupiter.web.entity.vo.RoleVO" resultMap="RoleMap"/>
    </resultMap>

    <resultMap id="RoleMap" type="com.qiein.jupiter.web.entity.vo.RoleVO">
        <result column="ROLENAME" property="roleName" jdbcType="VARCHAR"/>
        <result column="ROLEID" property="roleId" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap id="staffDetailMap" type="com.qiein.jupiter.web.entity.vo.StaffDetailVO">
        <id column="ID" property="id" jdbcType="INTEGER"/>
        <result column="NICKNAME" property="nickName" jdbcType="VARCHAR"/>
        <result column="PHONE" property="phone" jdbcType="VARCHAR"/>
        <result column="USERNAME" property="userName" jdbcType="VARCHAR"/>
        <result column="PASSWORD" property="password" jdbcType="VARCHAR"/>
        <result column="COMPANYID" property="companyId" jdbcType="INTEGER"/>
        <result column="CORPID" property="corpId" jdbcType="VARCHAR"/>
        <result column="DINGUSERID" property="dingUserId" jdbcType="VARCHAR"/>
        <result column="HEADIMG" property="headImg" jdbcType="VARCHAR"/>
        <result column="TOKEN" property="token" jdbcType="VARCHAR"/>
        <result column="STATUSFLAG" property="statusFlag" jdbcType="BOOLEAN"/>
        <result column="ISLOCK" property="lockFlag" jdbcType="BOOLEAN"/>
        <result column="ISDEL" property="delFlag" jdbcType="BOOLEAN"/>
        <result column="TODAYNUM" property="todayNum" jdbcType="INTEGER"/>
        <result column="WEIGHT" property="weight" jdbcType="INTEGER"/>
        <result column="LIMITDAY" property="limitDay" jdbcType="INTEGER"/>
        <result column="LASTPUSHTIME" property="lastPushTime" jdbcType="INTEGER"/>
        <result column="LIMITCHANNELIDS" property="limitChannelIds" jdbcType="VARCHAR"/>
        <result column="LIMITSHOPIDS" property="limitShopIds" jdbcType="VARCHAR"/>
        <result column="WECHATNAME" property="weChatName" jdbcType="VARCHAR"/>
        <result column="WECHATIMG" property="weChatImg" jdbcType="VARCHAR"/>
        <result column="LASTLOGINTIME" property="lastLoginTime" jdbcType="INTEGER"/>
        <result column="LASTLOGINIP" property="lastLoginIp" jdbcType="VARCHAR"/>
        <result column="WECHATOPENID" property="weChatOpenId" jdbcType="VARCHAR"/>
        <result column="CREATETIME" property="createTime" jdbcType="INTEGER"/>
    </resultMap>

    <resultMap id="pushMap" type="com.qiein.jupiter.web.entity.dto.StaffPushDTO">
        <result column="ID" property="staffId" jdbcType="INTEGER"/>
        <result column="NICKNAME" property="staffName" jdbcType="VARCHAR"/>
        <result column="GROUPID" property="groupId" jdbcType="VARCHAR"/>
        <result column="GROUPNAME" property="groupName" jdbcType="VARCHAR"/>
        <result column="WEIGHT" property="weight" jdbcType="INTEGER"/>
        <result column="TODAYNUM" property="todayNum" jdbcType="INTEGER"/>
        <result column="COMPANYID" property="companyId" jdbcType="INTEGER"/>
    </resultMap>

    <resultMap id="SearchMap" type="com.qiein.jupiter.web.entity.vo.SearchStaffVO">
        <id column="ID" property="id" jdbcType="INTEGER"/>
        <result column="NICKNAME" property="nickName" jdbcType="VARCHAR"/>
        <result column="PHONE" property="phone" jdbcType="VARCHAR"/>
        <result column="USERNAME" property="userName" jdbcType="VARCHAR"/>
        <result column="COMPANYID" property="companyId" jdbcType="INTEGER"/>
        <result column="GROUPNAME" property="groupName" jdbcType="VARCHAR"/>
        <result column="DEPTNAME" property="deptName" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="baseColumn">
        ID, NICKNAME, PHONE, USERNAME, PASSWORD, COMPANYID, CORPID, DINGUSERID, HEADIMG,
        TOKEN, STATUSFLAG, ISLOCK, ISDEL, TODAYNUM, WEIGHT, LIMITDAY, LASTPUSHTIME, LIMITCHANNELIDS,
        LIMITSHOPIDS, HEARTTIME, WHITEFLAG
    </sql>


    <select id="getById" parameterType="java.lang.Integer" resultMap="baseMap">
        SELECT
        <include refid="baseColumn"/>
        FROM hm_pub_staff
        WHERE ID = #{id}
    </select>

    <select id="findList" resultMap="baseMap">
        SELECT
        <include refid="baseColumn"/>
        FROM hm_pub_staff
        <where>
            <if test="nickName != null and nickName != ''">
                AND NICKNAME = #{nickName}
            </if>
            <if test="phone != null and phone != ''">
                AND PHONE = #{phone}
            </if>
            <if test="userName != null and userName != ''">
                AND USERNAME = #{userName}
            </if>
            <if test="password != null and password != ''">
                AND PASSWORD = #{password}
            </if>
            <if test="companyId != null and companyId != ''">
                AND COMPANYID = #{companyId}
            </if>
            <if test="corpId != null and corpId != ''">
                AND CORPID = #{corpId}
            </if>
            <if test="dingUserId != null and dingUserId != ''">
                AND DINGUSERID = #{dingUserId}
            </if>
            <if test="headImg != null and headImg != ''">
                AND HEADIMG = #{headImg}
            </if>
            <if test="token != null and token != ''">
                AND TOKEN = #{token}
            </if>
            <if test="statusFlag != null">
                AND STATUSFLAG = #{statusFlag}
            </if>
            <if test="lockFlag != null">
                AND ISLOCK = #{lockFlag}
            </if>
            <if test="delFlag != null">
                AND ISDEL = #{delFlag}
            </if>
        </where>
    </select>

    <insert id="insert" parameterType="com.qiein.jupiter.web.entity.po.StaffPO" useGeneratedKeys="true"
            keyProperty="id">
        INSERT INTO hm_pub_staff
        (NICKNAME, PHONE, USERNAME, PASSWORD, COMPANYID, CORPID, DINGUSERID, HEADIMG,
         TOKEN, STATUSFLAG, ISLOCK, ISDEL)
        VALUES (
            #{nickName}, #{phone}, #{userName}, #{password},
                         #{companyId}, #{corpId}, #{dingUserId},
                         #{headImg}, #{token}, #{statusFlag}, #{lockFlag}, #{delFlag}
        )
    </insert>

    <!--新增员工-->
    <insert id="addStaffVo" parameterType="com.qiein.jupiter.web.entity.vo.StaffVO" useGeneratedKeys="true"
            keyProperty="id">
        INSERT INTO hm_pub_staff
        (NICKNAME, PHONE, USERNAME, PASSWORD, COMPANYID, STATUSFLAG, ISLOCK, ISDEL, LIMITDAY)
        VALUES (
            #{nickName}, #{phone}, #{userName}, #{password},
            #{companyId}, #{statusFlag}, #{lockFlag}, #{delFlag}, #{limitDay}
        )
    </insert>


    <update id="update" parameterType="com.qiein.jupiter.web.entity.vo.StaffVO">
        UPDATE hm_pub_staff
        <set>
            <if test="nickName != null and nickName != ''">
                NICKNAME = #{nickName},
            </if>
            <if test="phone != null and phone != ''">
                PHONE = #{phone},
            </if>
            <if test="userName != null and userName != ''">
                USERNAME = #{userName},
            </if>
            <if test="password != null and password != ''">
                PASSWORD = #{password},
            </if>
            <if test="corpId != null">
                CORPID = #{corpId},
            </if>
            <if test="dingUserId != null">
                DINGUSERID = #{dingUserId},
            </if>
            <if test="headImg != null and headImg != ''">
                HEADIMG = #{headImg},
            </if>
        </set>
        WHERE ID = #{id}
        AND COMPANYID = #{companyId}
    </update>

    <!--编辑员工信息-->
    <update id="updateStaff" parameterType="com.qiein.jupiter.web.entity.vo.StaffVO">
        UPDATE hm_pub_staff
        <set>
            <if test="nickName != null and nickName != ''">
                NICKNAME = #{nickName},
            </if>
            <if test="phone != null and phone != ''">
                PHONE = #{phone},
            </if>
            <if test="userName != null and userName != ''">
                USERNAME = #{userName},
            </if>
            <if test="password != null and password != ''">
                PASSWORD = #{password},
            </if>
            <if test="headImg != null and headImg != ''">
                HEADIMG = #{headImg},
            </if>
            <if test="delFlag != null">
                ISDEL = #{delFlag}
            </if>
        </set>
        WHERE ID = #{id}
        AND COMPANYID = #{companyId}
    </update>

    <select id="getCompanyList" resultType="com.qiein.jupiter.web.entity.po.CompanyPO">
        SELECT
            company.ID,
            company.COMPANYNAME,
            company.LOGO
        FROM hm_pub_staff
            AS staff
            LEFT JOIN
            hm_pub_company AS company
                ON staff.COMPANYID = company.ID
        WHERE staff.PHONE = #{userName}
              AND staff.PASSWORD = #{password}
    </select>

    <select id="loginWithCompanyId" resultMap="baseMap">
        SELECT
        <include refid="baseColumn"/>
        FROM hm_pub_staff
        WHERE PHONE = #{userName}
        AND PASSWORD = #{password}
        AND COMPANYID = #{companyId}
    </select>

    <delete id="deleteByIdAndCid">
        DELETE FROM hm_pub_staff
        WHERE ID = #{id}
              AND COMPANYID = #{companyId}
    </delete>


    <select id="getByIdAndCid" parameterType="map" resultMap="baseMap">
        SELECT
        <include refid="baseColumn"/>
        FROM
        hm_pub_staff
        WHERE ID = #{id}
        AND COMPANYID = #{companyId}
    </select>

    <!--根据手机号获取员工，包含已被删除的-->
    <select id="getStaffByPhone" parameterType="map" resultMap="baseMap">
        SELECT
        <include refid="baseColumn"/>
        FROM
        hm_pub_staff
        WHERE PHONE = #{phone}
        AND COMPANYID = #{companyId}
    </select>

    <!--根据艺名，全名获取员工信息-->
    <select id="getStaffByNames" parameterType="map" resultMap="baseMap">
        SELECT
        <include refid="baseColumn"/>
        FROM
        hm_pub_staff
        WHERE
        COMPANYID = #{companyId}
        AND ( NICKNAME = #{name} OR USERNAME = #{name} )
        AND ISDEL = 0
    </select>

    <!--批量编辑员工密码-->
    <update id="batchEditStaffPwd" parameterType="map">
        UPDATE hm_pub_staff
        SET PASSWORD = #{password}
        WHERE COMPANYID = #{companyId}
        AND ID IN
        <foreach collection="staffIdArr" item="id" index="index" open="("
                 close=")" separator=",">
            #{id}
        </foreach>
    </update>

    <!--批量编辑员工密码-->
    <update id="batchRestoreStaff" parameterType="map">
        UPDATE hm_pub_staff
        <set>
            <if test="password != null and password != '' ">
                PASSWORD = #{password},
            </if>
            ISDEL = 0
        </set>
        WHERE COMPANYID = #{companyId}
        AND ID IN
        <foreach collection="staffIdArr" item="id" index="index" open="("
                 close=")" separator=",">
            #{id}
        </foreach>
    </update>

    <!--搜索员工-->
    <select id="getStaffListBySearchKey" resultMap="SearchMap">
        SELECT
            sf.ID,
            sf.NICKNAME,
            sf.PHONE,
            sf.USERNAME,
            grp.GROUPNAME,
            par.GROUPNAME AS DEPTNAME
        FROM
            hm_pub_group_staff rela
            INNER JOIN hm_pub_staff sf ON sf.COMPANYID = rela.COMPANYID AND rela.STAFFID = sf.ID
            LEFT JOIN hm_pub_group grp ON grp.GROUPID = rela.GROUPID AND rela.COMPANYID = grp.COMPANYID
            LEFT JOIN hm_pub_group par ON par.GROUPID = grp.PARENTID AND par.COMPANYID = grp.COMPANYID
        WHERE
            rela.COMPANYID = #{companyId}
            AND sf.ISDEL = 0
            AND (sf.PHONE LIKE CONCAT('%', #{searchKey}, '%')
                 OR sf.USERNAME LIKE CONCAT('%', #{searchKey}, '%')
                 OR sf.NICKNAME LIKE CONCAT('%', #{searchKey}, '%')
            )
    </select>

    <!--批量硬删除员工-->
    <delete id="batDelByIdsAndCid" parameterType="map">
        DELETE
        s,d
        FROM
        hm_pub_staff s, hm_pub_staff_detail d
        WHERE
        s.ID=d.ID AND s.COMPANYID = #{companyId} AND
        s.ID IN
        <foreach collection="ids" item="id" index="index" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <!--批量编辑员工状态,显示，锁定，删除-->
    <update id="batUpdateStaffState" parameterType="map">
        UPDATE
        hm_pub_staff
        <set>
            <if test="ssv.statusFlag != null">
                STATUSFLAG = #{ssv.statusFlag},
            </if>
            <if test="ssv.lock != null">
                ISLOCK = #{ssv.lock} ,
            </if>
            <if test="ssv.del != null">
                ISDEL = #{ssv.del}
            </if>
        </set>
        WHERE
        COMPANYID = #{ssv.companyId} AND ID IN
        <foreach collection="ids" item="id" index="index" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <select id="batchGetByIds" resultMap="baseMap">
        SELECT
        <include refid="baseColumn"/>
        FROM hm_pub_staff
        WHERE
        COMPANYID = #{companyId} AND
        ID IN
        <foreach collection="ids" item="id" index="index" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <!--插入员工详细信息-->
    <insert id="insertStaffDetail" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO hm_pub_staff_detail
        (ID, WECHATNAME, WECHATIMG, LASTLOGINTIME, WECHATOPENID, CREATETIME, COMPANYID)
        VALUES (
            #{id}, #{weChatName}, #{weChatImg}, #{lastLoginTime},
            #{weChatOpenId}, UNIX_TIMESTAMP(now()), #{companyId}
        )
    </insert>

    <!--更新员工详细信息-->
    <update id="updateStaffDetail">
        UPDATE hm_pub_staff_detail
        <set>
            <if test="weChatName != null">
                WECHATNAME = #{weChatName},
            </if>
            <if test="weChatImg != null">
                WECHATIMG = #{weChatImg},
            </if>
            <if test="qq != null">
                QQ = #{qq},
            </if>
            <if test="weChatOpenId != null">
                WECHATOPENID = #{weChatOpenId},
            </if>
        </set>
        WHERE ID = #{id}
        AND COMPANYID = #{companyId}
    </update>
    <!--删除员工详细信息-->
    <delete id="deleteStaffDetail">
        DELETE FROM hm_pub_staff_detail
        WHERE ID = #{id}
              AND COMPANYID = #{companyId}
    </delete>

    <!--获取员工详细信息-->
    <select id="getStaffDetailVO" resultMap="staffDetailMap">
        SELECT
            staff.ID,
            staff.NICKNAME,
            staff.PHONE,
            staff.USERNAME,
            staff.PASSWORD,
            staff.COMPANYID,
            staff.CORPID,
            staff.DINGUSERID,
            staff.HEADIMG,
            staff.TOKEN,
            staff.STATUSFLAG,
            staff.ISLOCK,
            staff.ISDEL,
            staff.TODAYNUM,
            staff.WEIGHT,
            staff.LIMITDAY,
            staff.LASTPUSHTIME,
            staff.LIMITCHANNELIDS,
            staff.LIMITSHOPIDS,
            detail.WECHATNAME,
            detail.WECHATIMG,
            detail.LASTLOGINTIME,
            detail.WECHATOPENID,
            detail.LASTLOGINIP,
            detail.CREATETIME,
            detail.MSGSET

        FROM hm_pub_staff staff LEFT JOIN
            hm_pub_staff_detail detail ON staff.ID = detail.ID
        WHERE staff.ID = #{id}
              AND staff.COMPANYID = #{companyId}
    </select>

    <!--更新员工token-->
    <update id="updateToken">
        UPDATE hm_pub_staff
        SET TOKEN = #{token}
        WHERE ID = #{id}
              AND COMPANYID = #{companyId}
    </update>

    <!--更新员工在线状态-->
    <update id="updateStatusFlag">
        UPDATE hm_pub_staff
        SET STATUSFLAG = #{statusFlag}
        WHERE ID = #{id}
              AND COMPANYID = #{companyId}
    </update>

    <!--更新员工锁定状态-->
    <update id="updateLockFlag">
        UPDATE hm_pub_staff
        SET ISLOCK = #{lockFlag}
        WHERE ID = #{id}
              AND COMPANYID = #{companyId}
    </update>

    <!--更新员工删除标志-->
    <update id="updateDelFlag">
        UPDATE hm_pub_staff
        SET ISDEL = #{delFlag}
        WHERE ID = #{id}
              AND COMPANYID = #{companyId}
    </update>

    <!--更新员工的登录情况-->
    <update id="updateStaffLoginInfo">
        UPDATE hm_pub_staff_detail
        SET LASTLOGINTIME = UNIX_TIMESTAMP(now()),
            LASTLOGINIP   = #{lastLoginIp}
        WHERE ID = #{id}
              AND COMPANYID = #{companyId}
    </update>

    <!--更新员工的下线情况-->
    <update id="updateStaffLogoutInfo">
        UPDATE hm_pub_staff_detail
            SET LASTLOGOUTTIME = UNIX_TIMESTAMP(now()),
            LASTLOGOUTIP   = #{lastLogoutIp}
        WHERE ID = #{id}
              AND COMPANYID = #{companyId}
    </update>

    <!--搜索离职员工-->
    <select id="getDelStaffListBySearchKey" resultMap="baseMap">
        SELECT
            sf.ID,
            sf.NICKNAME,
            sf.PHONE,
            sf.USERNAME
        FROM hm_pub_staff sf
        WHERE
            sf.COMPANYID = #{companyId}
            AND sf.ISDEL = 1
            AND (sf.PHONE LIKE CONCAT('%', #{searchKey}, '%')
                 OR sf.USERNAME LIKE CONCAT('%', #{searchKey}, '%')
                 OR sf.NICKNAME LIKE CONCAT('%', #{searchKey}, '%')
            )
    </select>

    <!--根据客资的渠道ID和拍摄地ID以及小组ID获取可分配的客服集合-->
    <select id="listStaffPushDTOByShopIdAndChannelId" parameterType="map" resultMap="pushMap">
        SELECT
            DISTINCT
            sf.ID,
            sf.NICKNAME,
            sf.WEIGHT,
            sf.COMPANYID
        FROM
            hm_pub_group grp
            LEFT JOIN hm_pub_group_staff rela ON grp.GROUPID = rela.GROUPID AND rela.COMPANYID = #{companyId}
            LEFT JOIN hm_pub_staff sf ON rela.STAFFID = sf.ID AND sf.COMPANYID = #{companyId}
        WHERE
            grp.COMPANYID = #{companyId}
            AND grp.GROUPID = #{groupId}
            AND sf.STATUSFLAG = 1
            AND sf.ISDEL = 0
            AND sf.ISLOCK = 0
            AND INSTR(sf.LIMITCHANNELIDS, CONCAT(',', #{channelId}, ',')) = 0
            AND INSTR(sf.LIMITSHOPIDS, CONCAT(',', #{shopId}, ',')) = 0
            AND (UNIX_TIMESTAMP(NOW()) - LASTPUSHTIME) &gt; #{interval}
            AND sf.TODAYNUM &lt; LIMITDAY
        ORDER BY sf.LASTPUSHTIME ASC;    
    </select>

    <!--获取客服指定时间内渠道和拍摄地客资的领取情况-->
    <select id="listStaffPushDTOByAlloted" parameterType="map" resultMap="pushMap">
        SELECT
        info.APPOINTORID ID, COUNT(1) TODAYNUM
        FROM
        ${infoTabName} info
        WHERE
        info.COMPANYID = #{companyId}
        AND info.ISDEL = 0
        AND info.SHOPID = #{shopId}
        AND info.CHANNELID = #{channelId}
        AND info.STATUSID != 5
        AND info.CREATETIME &gt;= UNIX_TIMESTAMP(CAST(SYSDATE() AS DATE))
        AND ( UNIX_TIMESTAMP(NOW()) - info.CREATETIME ) &lt; ${calcRange}
        AND info.APPOINTORID IN
        <foreach collection="staffList" item="staff" index="index" open="(" separator="," close=")">
            #{staff.staffId}
        </foreach>
        GROUP BY info.APPOINTORID;
    </select>

    <!-- 修改员工最后客资推送时间为当前时间 -->
    <update id="updateStaffLastPushTime">
        UPDATE hm_pub_staff
        SET LASTPUSHTIME = UNIX_TIMESTAMP(now())
        WHERE ID = #{id}
              AND COMPANYID = #{companyId}
    </update>

    <!--根据员工ID，获取小组员工信息-->
    <select id="getGroupStaffById" parameterType="map" resultMap="StaffVOMap">
        SELECT
            rela.GROUPID,
            sf.ID,
            sf.NICKNAME,
            sf.PHONE,
            sf.USERNAME,
            role_rela.ROLEID,
            role.ROLENAME
        FROM
            hm_pub_staff sf
            LEFT JOIN hm_pub_group_staff rela ON sf.COMPANYID = rela.COMPANYID AND rela.STAFFID = sf.ID
            LEFT JOIN hm_pub_staff_role role_rela ON sf.ID = role_rela.STAFFID AND sf.COMPANYID = role_rela.COMPANYID
            LEFT JOIN hm_pub_role role ON role_rela.ROLEID = role.ID AND role_rela.COMPANYID = role.COMPANYID
        WHERE
            sf.ID = #{staffId}
            AND rela.COMPANYID = #{companyId}
    </select>

    <!--获取员工card-->
    <select id="getStaffCard" parameterType="Integer" resultType="staffDetailVO">
        SELECT
            s.ID,
            s.NICKNAME,
            s.PHONE,
            s.USERNAME,
            s.COMPANYID,
            s.HEADIMG,
            s.STATUSFLAG,
            s.ISLOCK,
            s.ISDEL,
            sd.WECHATNAME,
            sd.WECHATIMG,
            sd.QQ,
            sd.LASTLOGINTIME,
            sd.LASTLOGOUTTIME,
            g.GROUPID    groupId,
            g.GROUPNAME  groupName,
            gg.GROUPID   deptId,
            gg.GROUPNAME deptName
        FROM
            hm_pub_staff s
            LEFT JOIN
            hm_pub_staff_detail sd ON s.ID = sd.ID
            LEFT JOIN
            hm_pub_group_staff gs ON gs.STAFFID = s.ID
            LEFT JOIN
            hm_pub_group g ON g.GROUPID = gs.GROUPID
            LEFT JOIN
            hm_pub_group gg ON g.PARENTID = gg.GROUPID
        WHERE
            s.COMPANYID = #{companyId} AND s.ID = #{staffId}
    </select>

    <!-- 添加到ip白名单 -->
    <update id="addIpWhite" parameterType="Integer">
        UPDATE hm_pub_staff set WHITEFLAG=1 where id IN
        <foreach collection="ids" item="id" index="index" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <!-- 从ip白名单删除 -->
    <update id="delIpWhite" parameterType="Integer">
        UPDATE hm_pub_staff
        SET WHITEFLAG = 0
        WHERE id = #{staffId}
    </update>

    <!-- 批量从ip白名单删除 -->
    <update id="delListIpWhite">
        UPDATE hm_pub_staff set WHITEFLAG=0 where id in
        <foreach collection="ids" item="staffId" open="(" separator="," close=")">
            #{staffId}
        </foreach>
    </update>

    <!-- 根据公司id 寻找员工中拥有ip白名单权限的账号 -->
    <select id="findId" parameterType="Integer" resultType="Integer">
        SELECT id
        FROM hm_pub_staff
        WHERE companyId = #{companyId} AND whiteflag = 1
    </select>

    <!-- 更新员工心跳时间 -->
    <update id="updateStaffHeartTime">
        UPDATE hm_pub_staff staff
        SET HEARTTIME = UNIX_TIMESTAMP(now())
        WHERE
            ID = #{staffId}
            AND COMPANYID = #{companyId}
    </update>

    <!--绑定微信-->
    <update id="bindingWeChat">
        UPDATE hm_pub_staff_detail
        SET WECHATUNIODID = #{weChatUnionId}
        WHERE id = #{id}
              AND COMPANYID = #{companyId}
    </update>

    <!--绑定钉钉-->
    <update id="bindingDing">
        UPDATE hm_pub_staff_detail
        SET DINGUNIONID = #{dingUnionId}
        WHERE id = #{id}
              AND COMPANYID = #{companyId}
    </update>
    
    <!-- 获取员工今日分配的客资数 -->
    <select id="getTodayKzNum" parameterType="map" resultType="Integer">
        SELECT
			COUNT(info.KZID) NUM
		FROM
			${infoTabName} info
		LEFT JOIN hm_crm_channel channel ON info.CHANNELID = channel.ID AND channel.COMPANYID = #{companyId}
		WHERE
			info.ISDEL = 0
		AND info.COMPANYID = #{companyId}
		AND info.APPOINTORID = #{staffId}
		AND info.STATUSID != 5
		AND info.STATUSID != 0
		AND info.STATUSID != 98
		AND info.STATUSID != 99
		AND info.STATUSID != 999
		AND (
			channel.PUSHRULE = 11
			OR channel.PUSHRULE = 1
		)
		AND info.CREATETIME &gt;= UNIX_TIMESTAMP(CAST(SYSDATE() AS DATE))
    </select>
    
    <!-- 修改员工今日领取客资数 -->
    <update id="updateTodatKzNum">
        UPDATE hm_pub_staff SET TODAYNUM = #{num} WHERE COMPANYID = #{companyId} AND ID = #{staffId};
    </update>

	<!-- 计算是否满限 -->    
    <update id="checkOverFlowToday">
        UPDATE hm_pub_staff SET STATUSFLAG = 9 WHERE COMPANYID = #{companyId} AND ID = #{staffId} AND TODAYNUM &gt;= LIMITDAY;
    </update>
    
    <!-- 校验是否有上线后连续三次怠工 -->
    <select id="getSaboteurCheckNum" parameterType="map" resultType="Integer">
    	SELECT (IFNULL(SUM(a.STATUSID),-1) + COUNT(1) - 3) NUM FROM (
	    	SELECT
				log.STATUSID
			FROM
				${logTabName} log
			LEFT JOIN hm_pub_staff_detail sf ON log.STAFFID = sf.ID AND sf.COMPANYID = #{companyId}
			WHERE
				log.STAFFID = #{staffId}
			AND log.COMPANYID = #{companyId}
			AND log.ALLOTTIME &gt; sf.LASTLOGINTIME
			AND (
				UNIX_TIMESTAMP(NOW()) - log.ALLOTTIME
			) &gt; #{overTime}
			ORDER BY
				log.ALLOTTIME DESC
			LIMIT 3
		) a	
    </select>
    
    <!-- 修改下线 -->
    <update id="editStatusFlagOffLine" parameterType="map">
        UPDATE hm_pub_staff SET STATUSFLAG = #{statusFlag} WHERE COMPANYID = #{companyId} AND ID = #{staffId} AND STATUSFLAG = 1;
    </update>
    
    <!--查询所选客服集合-->
    <select id="listStaffInstrIds" parameterType="map" resultMap="pushMap">
        SELECT
			sf.ID, sf.NICKNAME, sf.COMPANYID, grp.GROUPID, grp.GROUPNAME
		FROM
			hm_pub_staff sf
		LEFT JOIN hm_pub_group_staff rela ON sf.ID = rela.STAFFID AND rela.COMPANYID = #{companyId}
		LEFT JOIN hm_pub_group grp ON rela.GROUPID = grp.GROUPID AND grp.COMPANYID = #{companyId}
		WHERE
			sf.COMPANYID = #{companyId}
		AND sf.ISDEL = 0
		AND sf.ISLOCK = 0
		AND sf.STATUSFLAG = 1
		AND INSTR(CONCAT(',',#{staffIds},','),CONCAT(',',sf.ID,',')) != 0;
    </select>
    
    <!-- 修改最后上线时间 -->
    <update id="updatLastLoginTime" parameterType="map">
        UPDATE hm_pub_staff_detail SET LASTLOGINTIME = UNIX_TIMESTAMP() WHERE COMPANYID = #{companyId} AND ID = #{id};
    </update>
    
    <!-- 根据ID和企业ID获取推送员工信息 -->
    <select id="getPushDTOByCidAndUid" parameterType="map" resultMap="pushMap">
        SELECT
			sf.ID, sf.NICKNAME, grp.GROUPID, grp.GROUPNAME
		FROM
			hm_pub_staff sf
		LEFT JOIN hm_pub_group_staff rela ON sf.ID = rela.STAFFID AND rela.COMPANYID = #{companyId}
		LEFT JOIN hm_pub_group grp ON rela.GROUPID = grp.GROUPID AND grp.COMPANYID = #{companyId}
		WHERE
			sf.ID = #{id}
		AND sf.COMPANYID = #{companyId}
    </select>

    <update id="editMsgSet" parameterType="staffMsg">
        UPDATE hm_pub_staff_detail
        SET MSGSET = #{msgSet}
        WHERE ID = #{id} AND COMPANYID = #{companyId}
    </update>
</mapper>