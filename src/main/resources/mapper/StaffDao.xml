<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qiein.jupiter.web.dao.StaffDao">
    <resultMap id="baseMap" type="com.qiein.jupiter.web.entity.po.StaffPO">
        <id column="ID" property="id" jdbcType="INTEGER"/>
        <result column="NICKNAME" property="nickName" jdbcType="VARCHAR"/>
        <result column="PHONE" property="phone" jdbcType="VARCHAR"/>
        <result column="USERNAME" property="userName" jdbcType="VARCHAR"/>
        <result column="PASSWORD" property="password" jdbcType="VARCHAR"/>
        <result column="COMPANYID" property="companyId" jdbcType="INTEGER"/>
        <result column="CORPID" property="corpId" jdbcType="VARCHAR"/>
        <result column="DINGUSERID" property="dingUserId" jdbcType="VARCHAR"/>
        <result column="HEADIMG" property="headImg" jdbcType="VARCHAR"/>
        <result column="TOKEN" property="token" jdbcType="VARCHAR"/>
        <result column="ISSHOW" property="showFlag" jdbcType="INTEGER"/>
        <result column="ISLOCK" property="lockFlag" jdbcType="BOOLEAN"/>
        <result column="ISDEL" property="delFlag" jdbcType="BOOLEAN"/>
    </resultMap>

    <resultMap id="StaffVOMap" type="com.qiein.jupiter.web.entity.vo.StaffVO">
        <id column="ID" property="id" jdbcType="INTEGER"/>
        <result column="NICKNAME" property="nickName" jdbcType="VARCHAR"/>
        <result column="PHONE" property="phone" jdbcType="VARCHAR"/>
        <result column="USERNAME" property="userName" jdbcType="VARCHAR"/>
        <result column="PASSWORD" property="password" jdbcType="VARCHAR"/>
        <result column="COMPANYID" property="companyId" jdbcType="INTEGER"/>
        <result column="HEADIMG" property="headImg" jdbcType="VARCHAR"/>
        <result column="ISLOCK" property="lockFlag" jdbcType="BOOLEAN"/>
        <result column="ROLENAME" property="roleName" jdbcType="VARCHAR"/>
        <result column="ROLEID" property="roleId" jdbcType="VARCHAR"/>
        <result column="GROUPID" property="groupId" jdbcType="VARCHAR"/>
        <collection property="roleList" ofType="com.qiein.jupiter.web.entity.vo.RoleVO" resultMap="RoleMap"/>
    </resultMap>

    <resultMap id="RoleMap" type="com.qiein.jupiter.web.entity.vo.RoleVO">
        <result column="ROLENAME" property="roleName" jdbcType="VARCHAR"/>
        <result column="ROLEID" property="roleId" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap id="staffDetailMap" type="com.qiein.jupiter.web.entity.vo.StaffDetailVO">
        <id column="ID" property="id" jdbcType="INTEGER"/>
        <result column="NICKNAME" property="nickName" jdbcType="VARCHAR"/>
        <result column="PHONE" property="phone" jdbcType="VARCHAR"/>
        <result column="USERNAME" property="userName" jdbcType="VARCHAR"/>
        <result column="PASSWORD" property="password" jdbcType="VARCHAR"/>
        <result column="COMPANYID" property="companyId" jdbcType="INTEGER"/>
        <result column="CORPID" property="corpId" jdbcType="VARCHAR"/>
        <result column="DINGUSERID" property="dingUserId" jdbcType="VARCHAR"/>
        <result column="HEADIMG" property="headImg" jdbcType="VARCHAR"/>
        <result column="TOKEN" property="token" jdbcType="VARCHAR"/>
        <result column="ISSHOW" property="showFlag" jdbcType="INTEGER"/>
        <result column="ISLOCK" property="lockFlag" jdbcType="BOOLEAN"/>
        <result column="ISDEL" property="delFlag" jdbcType="BOOLEAN"/>
        <result column="WECHATNAME" property="weChatName" jdbcType="VARCHAR"/>
        <result column="WECHATIMG" property="weChatImg" jdbcType="VARCHAR"/>
        <result column="LASTLOGINTIME" property="lastLoginTime" jdbcType="INTEGER"/>
        <result column="LASTLOGINIP" property="lastLoginIp" jdbcType="VARCHAR"/>
        <result column="OPENID" property="openId" jdbcType="VARCHAR"/>
        <result column="CREATETIME" property="createTime" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="baseColumn">
        ID, NICKNAME, PHONE, USERNAME, PASSWORD,COMPANYID, CORPID, DINGUSERID, HEADIMG,
        TOKEN,ISSHOW,ISLOCK,ISDEL
    </sql>

    <select id="getById" parameterType="java.lang.Integer" resultMap="baseMap">
        SELECT
        <include refid="baseColumn"/>
        FROM hm_pub_staff
        WHERE ID = #{id}
    </select>

    <select id="findList" resultMap="baseMap">
        SELECT
        <include refid="baseColumn"/>
        FROM hm_pub_staff
        <where>
            <if test="nickName != null and nickName != ''">
                NICKNAME = #{nickName},
            </if>
            <if test="phone != null and phone != ''">
                PHONE = #{phone},
            </if>
            <if test="userName != null and userName != ''">
                USERNAME = #{userName},
            </if>
            <if test="password != null and password != ''">
                PASSWORD = #{password},
            </if>
            <if test="companyId != null and companyId != ''">
                COMPANYID = #{companyId},
            </if>
            <if test="corpId != null and corpId != ''">
                CORPID = #{corpId},
            </if>
            <if test="dingUserId != null and dingUserId != ''">
                DINGUSERID = #{dingUserId},
            </if>
            <if test="headImg != null and headImg != ''">
                HEADIMG = #{headImg},
            </if>
            <if test="token != null and token != ''">
                TOKEN = #{token},
            </if>
            <if test="showFlag != null">
                ISSHOW = #{showFlag},
            </if>
            <if test="lockFlag != null">
                ISLOCK = #{lockFlag},
            </if>
            <if test="delFlag != null">
                ISDEL = #{delFlag},
            </if>
        </where>
    </select>

    <insert id="insert" parameterType="com.qiein.jupiter.web.entity.po.StaffPO" useGeneratedKeys="true"
            keyProperty="id">
        INSERT INTO  hm_pub_staff
        (NICKNAME, PHONE, USERNAME, PASSWORD,COMPANYID, CORPID, DINGUSERID, HEADIMG,
        TOKEN,ISSHOW,ISLOCK,ISDEL)
        VALUES (
        #{nickName}, #{phone}, #{userName}, #{password},
        #{companyId}, #{corpId},#{dingUserId},
        #{headImg},#{token},#{showFlag},#{lockFlag},#{delFlag}
        )
    </insert>

    <!--新增员工-->
    <insert id="addStaffVo" parameterType="com.qiein.jupiter.web.entity.vo.StaffVO" useGeneratedKeys="true"
            keyProperty="id">
        INSERT INTO  hm_pub_staff
        (NICKNAME, PHONE, USERNAME, PASSWORD,COMPANYID, ISSHOW,ISLOCK,ISDEL)
        VALUES (
        #{nickName}, #{phone}, #{userName}, #{password},
        #{companyId}, #{showFlag},#{lockFlag},#{delFlag}
        )
    </insert>


    <update id="update" parameterType="com.qiein.jupiter.web.entity.vo.StaffVO">
        UPDATE hm_pub_staff
        <set>
            <if test="nickName != null and nickName != ''">
                NICKNAME = #{nickName},
            </if>
            <if test="phone != null and phone != ''">
                PHONE = #{phone},
            </if>
            <if test="userName != null and userName != ''">
                USERNAME = #{userName},
            </if>
            <if test="password != null and password != ''">
                PASSWORD = #{password},
            </if>
            <if test="corpId != null">
                CORPID = #{corpId},
            </if>
            <if test="dingUserId != null">
                DINGUSERID = #{dingUserId},
            </if>
            <if test="headImg != null and headImg != ''">
                HEADIMG = #{headImg},
            </if>
        </set>
        WHERE ID = #{id}
        AND COMPANYID = #{companyId}
    </update>

    <!--编辑员工信息-->
    <update id="updateStaff" parameterType="com.qiein.jupiter.web.entity.vo.StaffVO">
        UPDATE hm_pub_staff
        <set>
            <if test="nickName != null and nickName != ''">
                NICKNAME = #{nickName},
            </if>
            <if test="phone != null and phone != ''">
                PHONE = #{phone},
            </if>
            <if test="userName != null and userName != ''">
                USERNAME = #{userName},
            </if>
            <if test="password != null and password != ''">
                PASSWORD = #{password},
            </if>
            <if test="headImg != null and headImg != ''">
                HEADIMG = #{headImg},
            </if>
        </set>
        WHERE ID = #{id}
        AND COMPANYID = #{companyId}
    </update>

    <select id="getCompanyList" resultType="com.qiein.jupiter.web.entity.po.CompanyPO">
        SELECT company.ID,company.COMPANYNAME,
        company.LOGO
        FROM hm_pub_staff
        as staff
        LEFT JOIN
        hm_pub_company as company
        ON staff.COMPANYID = company.ID
        WHERE staff.PHONE = #{userName}
        AND staff.PASSWORD = #{password}
    </select>

    <select id="loginWithCompanyId" resultMap="baseMap">
        SELECT
        <include refid="baseColumn"/>
        FROM hm_pub_staff
        WHERE PHONE = #{userName}
        AND PASSWORD = #{password}
        AND COMPANYID = #{companyId}
    </select>

    <delete id="deleteByIdAndCid">
        DELETE FROM hm_pub_staff
        WHERE ID = #{id}
        AND COMPANYID = #{companyId}
    </delete>


    <select id="getByIdAndCid" parameterType="map" resultMap="baseMap">
        SELECT
        <include refid="baseColumn"/>
        FROM
        hm_pub_staff
        WHERE ID = #{id}
        AND COMPANYID = #{companyId}
    </select>

    <!--根据手机号获取员工，包含已被删除的-->
    <select id="getStaffByPhone" parameterType="map" resultMap="baseMap">
        SELECT
        <include refid="baseColumn"/>
        FROM
        hm_pub_staff
        WHERE PHONE = #{phone}
        AND COMPANYID = #{companyId}
    </select>

    <!--根据艺名，全名获取员工信息-->
    <select id="getStaffByNames" parameterType="map" resultMap="baseMap">
        SELECT
        <include refid="baseColumn"/>
        FROM
        hm_pub_staff
        WHERE
        COMPANYID = #{companyId}
        AND ( NICKNAME = #{name} OR USERNAME = #{name} )
    </select>

    <!--批量编辑员工密码-->
    <update id="batchEditStaffPwd" parameterType="map">
        UPDATE hm_pub_staff
        SET PASSWORD = #{password}
        WHERE COMPANYID = #{companyId}
        AND STAFFID IN
        <foreach collection="staffIdArr" item="id" index="index" open="("
                 close=")" separator=",">
            #{id}
        </foreach>
    </update>

    <!--搜索员工-->
    <select id="getStaffListBySearchKey" resultMap="StaffVOMap">
        SELECT
	        rela.GROUPID, sf.ID, sf.NICKNAME, sf.PHONE, sf.USERNAME, sf.HEADIMG, sf.ISLOCK, sf.`PASSWORD`, role_rela.ROLEID, role.ROLENAME,  grp.GROUPNAME
        FROM
            hm_pub_group_staff rela
            INNER JOIN hm_pub_staff sf ON sf.COMPANYID = rela.COMPANYID AND rela.STAFFID = sf.ID
            LEFT JOIN hm_pub_staff_role role_rela ON sf.ID = role_rela.STAFFID  AND sf.COMPANYID = role_rela.COMPANYID
            LEFT JOIN hm_pub_role role ON role_rela.ROLEID = role.ID  AND role_rela.COMPANYID = role.COMPANYID
            LEFT JOIN hm_pub_group grp ON grp.GROUPID = rela.GROUPID AND rela.COMPANYID = grp.COMPANYID
        WHERE
            rela.COMPANYID = #{companyId}
            AND sf.ISDEL = 0
            AND  ( sf.PHONE LIKE CONCAT('%',#{searchKey},'%')
                OR sf.USERNAME LIKE CONCAT('%',#{searchKey},'%')
                OR sf.NICKNAME LIKE CONCAT('%',#{searchKey},'%')
	        )
    </select>

    <!--删除批量员工-->
    <delete id="batDelByIdsAndCid" parameterType="map">
        DELETE
        FROM
        hm_pub_staff
        WHERE
        COMPANYID = #{companyId} AND
        ID IN
        <foreach collection="ids" item="id" index="index" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="batchGetByIds" resultMap="baseMap">
        SELECT
        <include refid="baseColumn"/>
        FROM hm_pub_staff
        WHERE
        COMPANYID = #{companyId} AND
        ID IN
        <foreach collection="ids" item="id" index="index" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>
    <!--插入员工详细信息-->
    <insert id="insertStaffDetail" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO hm_pub_staff_detail
         (ID,WECHATNAME, WECHATIMG, LASTLOGINTIME, LASTLOGINIP,OPENID, CREATETIME,COMPANYID)
        VALUES (
        #{id},#{weChatName}, #{weChatImg}, #{lastLoginTime}, #{lastLoginIp},
        #{openId},UNIX_TIMESTAMP(now()),#{companyId}
        )
    </insert>
    <!--更新员工详细信息-->
    <update id="updateStaffDetail">
        UPDATE hm_pub_staff_detail
        <set>
            <if test="weChatName != null">
                WECHATNAME = #{weChatName},
            </if>
            <if test="weChatImg != null">
                WECHATIMG = #{weChatImg},
            </if>
            <if test="qq != null">
                QQ = #{qq},
            </if>
            <if test="openId != null">
                OPENID = #{openId},
            </if>
        </set>
        WHERE ID = #{id}
        AND COMPANYID = #{companyId}
    </update>
    <!--删除员工详细信息-->
    <delete id="deleteStaffDetail">
      DELETE FROM hm_pub_staff_detail
         WHERE ID = #{id}
        AND COMPANYID = #{companyId}
    </delete>

    <!--获取员工详细信息-->
    <select id="getStaffDetail" resultMap="staffDetailMap">
        SELECT   staff.ID,  staff.NICKNAME,  staff.PHONE,  staff.USERNAME,  staff.PASSWORD,
         staff.COMPANYID,  staff.CORPID,  staff.DINGUSERID, staff.HEADIMG,
        staff.TOKEN,staff.ISSHOW,staff.ISLOCK,staff.ISDEL,detail.WECHATNAME, detail.WECHATIMG, detail.LASTLOGINTIME,
        detail.OPENID,detail.LASTLOGINIP,detail.OPENID, detail.CREATETIME
        FROM  hm_pub_staff staff LEFT JOIN
        hm_pub_staff_detail detail ON staff.ID = detail.ID
        WHERE staff.ID = #{id}
        AND staff.COMPANYID = #{companyId}
    </select>
    <!--更新员工token-->
    <update id="updateToken">
        UPDATE hm_pub_staff
        SET TOKEN = #{token}
         WHERE ID = #{id}
        AND COMPANYID = #{companyId}
    </update>
    <!--更新员工在线状态-->
    <update id="updateShowFlag">
        UPDATE hm_pub_staff
        SET ISSHOW = #{showFlag}
        WHERE ID = #{id}
        AND COMPANYID = #{companyId}
    </update>
    <!--更新员工锁定状态-->
    <update id="updateLockFlag">
        UPDATE hm_pub_staff
        SET ISLOCK = #{lockFlag}
        WHERE ID = #{id}
        AND COMPANYID = #{companyId}
    </update>

    <!--更新员工删除标志-->
    <update id="updateDelFlag">
        UPDATE hm_pub_staff
        SET ISDEL = #{delFlag}
        WHERE ID = #{id}
        AND COMPANYID = #{companyId}
    </update>
    <!--更新员工的登录情况-->
    <update id="updateStaffLoginInfo">
        UPDATE hm_pub_staff_detail
        SET LASTLOGINTIME = UNIX_TIMESTAMP(now()),
         LASTLOGINIP = #{lastLoginIp}
        WHERE ID = #{id}
        AND COMPANYID = #{companyId}
    </update>


</mapper>