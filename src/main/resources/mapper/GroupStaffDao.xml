<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qiein.jupiter.web.dao.GroupStaffDao">
    <resultMap id="baseMap" type="com.qiein.jupiter.web.entity.po.GroupStaffPO">
        <result column="GROUPID" property="groupId" jdbcType="VARCHAR"/>
        <result column="STAFFID" property="staffId" jdbcType="INTEGER"/>
        <result column="COMPANYID" property="companyId" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="baseColumn">
        GROUPID,STAFFID,COMPANYID
    </sql>

    <resultMap id="groupMap" type="com.qiein.jupiter.web.entity.vo.GroupStaffVO">
        <id column="UPGROUPID" property="groupId" jdbcType="VARCHAR"/>
        <result column="UPGROUPNAME" property="groupName" jdbcType="VARCHAR"/>
        <result column="UPPARENTID" property="parentId" jdbcType="VARCHAR"/>
        <result column="UPGROUPTYPE" property="groupType" jdbcType="VARCHAR"/>
        <result column="UPCOMPANYID" property="companyId" jdbcType="VARCHAR"/>
        <result column="UPCHIEFIDS" property="chiefIds" jdbcType="VARCHAR"/>
        <result column="UPCHIEFNAMES" property="chiefNames" jdbcType="VARCHAR"/>
        <collection property="groupList" ofType="com.qiein.jupiter.web.entity.vo.GroupStaffVO">
            <id column="GROUPID" property="groupId" jdbcType="VARCHAR"/>
            <result column="GROUPNAME" property="groupName" jdbcType="VARCHAR"/>
            <result column="PARENTID" property="parentId" jdbcType="VARCHAR"/>
            <result column="GROUPTYPE" property="groupType" jdbcType="VARCHAR"/>
            <result column="COMPANYID" property="companyId" jdbcType="VARCHAR"/>
            <result column="CHIEFIDS" property="chiefIds" jdbcType="VARCHAR"/>
            <result column="CHIEFNAMES" property="chiefNames" jdbcType="VARCHAR"/>
            <collection property="staffList" ofType="com.qiein.jupiter.web.entity.po.StaffPO">
                <id column="ID" property="id" jdbcType="INTEGER"/>
                <result column="NICKNAME" property="nickName" jdbcType="VARCHAR"/>
                <result column="PHONE" property="phone" jdbcType="VARCHAR"/>
                <result column="USERNAME" property="userName" jdbcType="VARCHAR"/>
                <result column="COMPANYID" property="companyId" jdbcType="INTEGER"/>
                <result column="HEADIMG" property="headImg" jdbcType="VARCHAR"/>
            </collection>
        </collection>
    </resultMap>

    <!--<resultMap id="groupMap" type="com.qiein.jupiter.web.entity.vo.GroupStaffVO">-->
        <!--<id column="GROUPID" property="groupId" jdbcType="VARCHAR"/>-->
        <!--<result column="GROUPNAME" property="groupName" jdbcType="VARCHAR"/>-->
        <!--<result column="PARENTID" property="parentId" jdbcType="VARCHAR"/>-->
        <!--<result column="GROUPTYPE" property="groupType" jdbcType="VARCHAR"/>-->
        <!--<result column="COMPANYID" property="companyId" jdbcType="VARCHAR"/>-->
        <!--<result column="CHIEFIDS" property="chiefIds" jdbcType="VARCHAR"/>-->
        <!--<result column="CHIEFNAMES" property="chiefNames" jdbcType="VARCHAR"/>-->
        <!--<collection property="groupList" ofType="com.qiein.jupiter.web.entity.vo.GroupStaffVO" resultMap="groupMap"/>-->
        <!--<collection property="staffList" ofType="com.qiein.jupiter.web.entity.po.StaffPO" resultMap="staffPOMap"/>-->
    <!--</resultMap>-->
    <resultMap id="staffPOMap" type="com.qiein.jupiter.web.entity.po.StaffPO">
        <id column="ID" property="id" jdbcType="INTEGER"/>
        <result column="NICKNAME" property="nickName" jdbcType="VARCHAR"/>
        <result column="PHONE" property="phone" jdbcType="VARCHAR"/>
        <result column="USERNAME" property="userName" jdbcType="VARCHAR"/>
        <result column="COMPANYID" property="companyId" jdbcType="INTEGER"/>
        <result column="HEADIMG" property="headImg" jdbcType="VARCHAR"/>
        <result column="ISLOCK" property="lockFlag" jdbcType="BOOLEAN"/>
    </resultMap>

    <resultMap id="StaffVOMap" type="com.qiein.jupiter.web.entity.vo.StaffVO">
        <id column="ID" property="id" jdbcType="INTEGER"/>
        <result column="NICKNAME" property="nickName" jdbcType="VARCHAR"/>
        <result column="PHONE" property="phone" jdbcType="VARCHAR"/>
        <result column="USERNAME" property="userName" jdbcType="VARCHAR"/>
        <result column="PASSWORD" property="password" jdbcType="VARCHAR"/>
        <result column="COMPANYID" property="companyId" jdbcType="INTEGER"/>
        <result column="HEADIMG" property="headImg" jdbcType="VARCHAR"/>
        <result column="ISLOCK" property="lockFlag" jdbcType="BOOLEAN"/>
        <result column="GROUPID" property="groupId" jdbcType="VARCHAR"/>
        <collection property="roleList" ofType="com.qiein.jupiter.web.entity.vo.RoleVO" resultMap="RoleMap"/>
    </resultMap>

    <resultMap id="RoleMap" type="com.qiein.jupiter.web.entity.vo.RoleVO">
        <result column="ROLENAME" property="roleName" jdbcType="VARCHAR"/>
        <result column="ROLEID" property="roleId" jdbcType="VARCHAR"/>
    </resultMap>

    <!--根据小组类型获取指定小组及组内人员-->
    <resultMap id="GroupTypeMap" type="com.qiein.jupiter.web.entity.vo.GroupStaffVO">
        <id column="GROUPID" property="groupId" jdbcType="VARCHAR"/>
        <result column="GROUPNAME" property="groupName" jdbcType="VARCHAR"/>
        <result column="PARENTID" property="parentId" jdbcType="VARCHAR"/>
        <result column="GROUPTYPE" property="groupType" jdbcType="VARCHAR"/>
        <result column="COMPANYID" property="companyId" jdbcType="VARCHAR"/>
        <result column="CHIEFIDS" property="chiefIds" jdbcType="VARCHAR"/>
        <result column="CHIEFNAMES" property="chiefNames" jdbcType="VARCHAR"/>

        <collection property="staffList" ofType="com.qiein.jupiter.web.entity.po.StaffPO" column="STAFFLIST">
            <id property="id" column="STAFFID" javaType="int" jdbcType="INTEGER"/>
            <result property="nickName" column="NICKNAME" javaType="String" jdbcType="VARCHAR"/>
            <result property="phone" column="PHONE" javaType="String" jdbcType="VARCHAR"/>
            <result property="userName" column="USERNAME" javaType="String" jdbcType="VARCHAR"/>
        </collection>
    </resultMap>

    <!--获取公司全部的组及下属员工-->
    <select id="getAllGroupAndStaff" resultMap="groupMap">
		SELECT  ID, GROUPID, GROUPNAME, PARENTID, GROUPTYPE, COMPANYID,CHIEFIDS,CHIEFNAMES
		FROM hm_pub_group WHERE COMPANYID = #{companyId} AND PARENTID = '0'
    </select>

    <!--获取某个组及下属员工-->
    <select id="getGroupStaffListByParentIdAndCid" resultMap="groupMap">
 		SELECT
			hm_pub_group.GROUPID,
			hm_pub_group.GROUPNAME,
			hm_pub_group.PARENTID,
			hm_pub_group.GROUPTYPE,
			hm_pub_group.COMPANYID,
			hm_pub_group.CHIEFIDS,
			hm_pub_group.CHIEFNAMES,
			staff.ID STAFFID,
			staff.NICKNAME,
			staff.PHONE,
			staff.USERNAME,
			staff.PASSWORD,
			staff.COMPANYID,
			staff.CORPID,
			staff.DINGUSERID,
			staff.OPENID,
			staff.HEADIMG,
			staff.TOKEN,
			staff.ISSHOW,
			staff.ISLOCK,
			staff.ISDEL
		FROM
			hm_pub_group
			LEFT JOIN hm_pub_group_staff rela ON hm_pub_group.GROUPID = rela.GROUPID
			LEFT JOIN hm_pub_staff staff ON rela.STAFFID = staff.ID
		WHERE hm_pub_group.PARENTID = #{parentId}
		AND hm_pub_group.COMPANYID = #{companyId}
    </select>

    <!--删除员工小组-->
    <delete id="deleteByStaffId" parameterType="map">
        DELETE FROM  hm_pub_group_staff
        WHERE STAFFID = #{staffId}
        AND COMPANYID = #{companyId}
    </delete>

    <!--批量删除员工小组-->
    <delete id="batchDeleteByStaffArr" parameterType="map">
        DELETE FROM hm_pub_group_staff
        WHERE COMPANYID = #{companyId}
        AND STAFFID IN
        <foreach collection="staffIdArr" item="id" index="index" open="("
                 close=")" separator=",">
            #{id}
        </foreach>
    </delete>

    <!--添加小组人员关联表-->
    <insert id="insertGroupStaff" parameterType="map">
        INSERT INTO hm_pub_group_staff
        (GROUPID,STAFFID,COMPANYID)
        VALUES
        (#{groupId},#{staffId},#{companyId})
    </insert>

    <!--批量编辑员工小组关联-->
    <update id="batchEditStaffGroup" parameterType="map">
        UPDATE hm_pub_group_staff
        SET GROUPID = #{groupId}
        WHERE COMPANYID = #{companyId}
        AND STAFFID IN
        <foreach collection="staffIdArr" item="id" index="index" open="("
                 close=")" separator=",">
            #{id}
        </foreach>
    </update>

    <!--获取小组人员-->
    <select id="getGroupStaffs" parameterType="map" resultMap="StaffVOMap">
        SELECT
            rela.GROUPID, sf.ID, sf.NICKNAME, sf.PHONE, sf.USERNAME, sf.HEADIMG, sf.ISLOCK, sf.`PASSWORD`, role_rela.ROLEID,  role.ROLENAME
        FROM
            hm_pub_group_staff rela
            INNER JOIN hm_pub_staff sf ON sf.COMPANYID = rela.COMPANYID AND rela.STAFFID = sf.ID
            LEFT JOIN hm_pub_staff_role role_rela ON sf.ID = role_rela.STAFFID AND sf.COMPANYID = role_rela.COMPANYID
            LEFT JOIN hm_pub_role role ON role_rela.ROLEID = role.ID AND role_rela.COMPANYID = role.COMPANYID
        WHERE
            rela.GROUPID = #{groupId}
            AND rela.COMPANYID = #{companyId}
            AND sf.ISDEL = 0
    </select>

    <!--获取公司下所有的部门及员工-->
    <select id="getAllDeptAndStaff" resultMap="groupMap">
       SELECT
            group_up.GROUPNAME UPGROUPNAME,group_up.GROUPID UPGROUPID,group_up.PARENTID UPPARENTID,
            group_down.GROUPNAME,group_down.GROUPID,group_down.PARENTID,
            staff.id,staff.NICKNAME
        FROM
            hm_pub_group group_up
            LEFT JOIN hm_pub_group group_down ON group_up.COMPANYID = group_down.COMPANYID
            AND group_up.GROUPID = group_down.PARENTID
            LEFT JOIN hm_pub_group_staff group_staff ON group_down.GROUPID = group_staff.GROUPID
            LEFT JOIN hm_pub_staff staff on group_staff.STAFFID=staff.ID
            AND staff.ISLOCK = 0
	        AND staff.ISDEL = 0
          WHERE group_up.COMPANYID = #{companyId}
          AND group_up.PARENTID = '0'
    </select>
    
    <!--根据组类型获取所有小组及组内人员信息-->
    <select id="getListByGroupType" parameterType="map" resultMap="GroupTypeMap">
        SELECT
	        g.GROUPID , g.GROUPNAME , g.PARENTID , g.GROUPTYPE , g.COMPANYID , g.CHIEFIDS , g.CHIEFNAMES ,
			s.ID STAFFID,s.NICKNAME nickName,s.PHONE phone,s.USERNAME userName
        FROM
	        hm_pub_group g
        LEFT JOIN
	        hm_pub_group_staff gs ON gs.GROUPID = g.GROUPID
        LEFT JOIN
	        hm_pub_staff s ON gs.STAFFID = s.ID
        WHERE
	        s.COMPANYID = #{companyId} AND g.GROUPTYPE = #{type}

    </select>

</mapper>